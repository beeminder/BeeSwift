# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
   lane :lint do
      swiftlint(
         mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
         executable: "Pods/SwiftLint/swiftlint",
         reporter: "github-actions-logging",
         config_file: ".swiftlint.yml",     # The path of the configuration file (optional)
         raise_if_swiftlint_error: true,      # Allow fastlane to raise an error if swiftlint fails
         ignore_exit_status: true    # Allow fastlane to continue even if SwiftLint returns a non-zero exit status
      )
   end

  lane :test do
    run_tests(scheme: "BeeSwiftTests")
    run_tests(scheme: "BeeSwiftUITests")

    trainer(output_directory: ".")
  end

  lane :build do
    build_app(scheme: "BeeSwift")
    sentry_upload_dsym()
  end

  lane :beta do
    # Ensure that your git status is not dirty
    ensure_git_status_clean

    # Increment the build number (not the version number)
    # Providing the xcodeproj is optional
    increment_build_number(xcodeproj: "BeeSwift.xcodeproj")
    
    build_app(scheme: "BeeSwift")

    # Commit the version bump
    commit_version_bump(xcodeproj: "BeeSwift.xcodeproj")

    # Add a git tag for this build. This will automatically
    # use an appropriate git tag name
    add_git_tag

    # Push the new commit and tag back to your git remote
    push_to_git_remote
    
    upload_to_testflight(username: "andy@andybrett.com")
  end
end
